Kuber - оркестратор контейнеров

Преимущества:
он неизменяемый
умееет за helth healing
декларативность
верх крутизны - это использовать его как Infra as code
каждый компонент независим от остальных

можно управлять через CLI или UI

POD - мнимальная абстракция
в поде может быть несколько контейнеров
но обычно делают 1 контейнер - 1 под

kubectl create -f pod.yaml
kubectl config get-contexts
kubectl get nodes
kubectl get pod
kubectl completion - автодополнение по кнопке tab

Replicaset
абстракция для указания реплик
репликасет является родителем пода
это управляется за счет 2 вещей - это лэйблы и селекторы

label - метки, ты сам их навешиваешь
selector - это инфструкция для репликасета и по нему он понимает
что это под его

kubectl delete - f ...
kubectl delete pod <имя>
kubectl delete pod -- all

репликасеты создаются тольно также из файлика как под

kubectl get replicaset

kubectl apply -f replicaset.yaml - обновление
kubectl scale --replicas=2 replicaset my-replicaset
kubectl describe rs my-replicaset - посмотреть
а что случилось с объектом, используется для дэбага

Если мы изменим например в файле версию nginx и применим файле,
то заметим что поды не перезапустились, а в дескрайбе стоит новая
версия nginx, это потому что объекты в букере неизменяемый

kubectl get pod --show-labels

в мозгах темплейт обновлен, но репликасеты сказали держать 2
реплики поэтому он не перезапускает поды после изменения
темплейта